

[+] exp starts from: 2023-04-04 15:46:02
[+] model: Resnet18Classifier
    [+] Resnet18Classifier(
    [+]   (resnet): ResNet(
    [+]     (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    [+]     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]     (relu): ReLU(inplace=True)
    [+]     (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    [+]     (layer1): Sequential(
    [+]       (0): BasicBlock(
    [+]         (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         (relu): ReLU(inplace=True)
    [+]         (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]       )
    [+]       (1): BasicBlock(
    [+]         (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         (relu): ReLU(inplace=True)
    [+]         (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]       )
    [+]     )
    [+]     (layer2): Sequential(
    [+]       (0): BasicBlock(
    [+]         (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    [+]         (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         (relu): ReLU(inplace=True)
    [+]         (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         (downsample): Sequential(
    [+]           (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
    [+]           (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         )
    [+]       )
    [+]       (1): BasicBlock(
    [+]         (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         (relu): ReLU(inplace=True)
    [+]         (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]       )
    [+]     )
    [+]     (layer3): Sequential(
    [+]       (0): BasicBlock(
    [+]         (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    [+]         (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         (relu): ReLU(inplace=True)
    [+]         (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         (downsample): Sequential(
    [+]           (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
    [+]           (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         )
    [+]       )
    [+]       (1): BasicBlock(
    [+]         (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         (relu): ReLU(inplace=True)
    [+]         (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]       )
    [+]     )
    [+]     (layer4): Sequential(
    [+]       (0): BasicBlock(
    [+]         (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    [+]         (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         (relu): ReLU(inplace=True)
    [+]         (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         (downsample): Sequential(
    [+]           (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
    [+]           (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         )
    [+]       )
    [+]       (1): BasicBlock(
    [+]         (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]         (relu): ReLU(inplace=True)
    [+]         (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    [+]         (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    [+]       )
    [+]     )
    [+]     (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    [+]     (fc): Linear(in_features=512, out_features=2, bias=True)
    [+]   )
    [+] )
[+] criterion: CrossEntropyLoss
[+] device: cuda:0
[+] dataset: dogs_vs_cats
[+] seed: 0
[+] trn_preprocess: 
    [+] trn_preprocess.00: Resize(size=(256,256),interpolation=bilinear,max_size=None,antialias=None)
    [+] trn_preprocess.01: RandomCrop(size=(224,224),padding=None)
    [+] trn_preprocess.02: RandomHorizontalFlip(p=0.5)
    [+] trn_preprocess.03: ToTensor()
    [+] trn_preprocess.04: Normalize(mean=(0.485,0.456,0.406),std=(0.229,0.224,0.2225))
[+] val_preprocess: 
    [+] val_preprocess.00: Resize(size=(256,256),interpolation=bilinear,max_size=None,antialias=None)
    [+] val_preprocess.01: ToTensor()
    [+] val_preprocess.02: Normalize(mean=(0.485,0.456,0.406),std=(0.229,0.224,0.2225))
[+] batch_size: 32
[+] num_epochs: 8
[+] optimizer: SGD
    [+] optimizer_params.lr: 0.001
    [+] optimizer_params.momentum: 0.9
    [+] optimizer_params.nesterov: True
[+] scheduler: MultiStepLR
    [+] scheduler_params.milestones: [4, 6]
    [+] scheduler_params.gamma: 0.2
[+] checkpoint_path: ./checkpoints/dogs_vs_cats.resnet18.pt
    ========================================
    [001] trn-loss: 0.2174 --- trn-acc: 90.36%
    [001] val-loss: 0.1138 --- val-acc: 94.88%
    ========================================
    [002] trn-loss: 0.0833 --- trn-acc: 96.66%
    [002] val-loss: 0.0621 --- val-acc: 97.68%
    ========================================
    [003] trn-loss: 0.0641 --- trn-acc: 97.55%
    [003] val-loss: 0.0501 --- val-acc: 98.08%
    ========================================
    [004] trn-loss: 0.0489 --- trn-acc: 98.07%
    [004] val-loss: 0.0388 --- val-acc: 98.72%
    ========================================
    [005] trn-loss: 0.0344 --- trn-acc: 98.71%
    [005] val-loss: 0.0410 --- val-acc: 98.72%
    ========================================
    [006] trn-loss: 0.0289 --- trn-acc: 98.93%
    [006] val-loss: 0.0383 --- val-acc: 98.72%
    ========================================
    [007] trn-loss: 0.0285 --- trn-acc: 98.95%
    [007] val-loss: 0.0397 --- val-acc: 98.48%
    ========================================
    [008] trn-loss: 0.0284 --- trn-acc: 98.96%
    [008] val-loss: 0.0393 --- val-acc: 98.72%
[=] best-val-acc: 98.72%
